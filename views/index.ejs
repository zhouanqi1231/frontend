<html lang="es">

<head>
  <meta charset='utf-8'>
  <script src='js/d3.min.js'></script>
  <link rel='stylesheet' type='text/css' href='css/style.css'>
  <title>graph database page</title>
</head>

<body>
  <!-- info-panel -->
  <div id="info-panel" class="info-panel">
    <p style="text-align: right;"><a href="javascript:void(0)" onclick="closeInfoPanel()">X</a></p>
  </div>

  <!-- input-query -->
  <div id="input-panel" class="input-panel">
    <label for="input-query"></label><input type="text" id="input-query" name="input-query" class="input-query" onkeydown="return input_nl_query(event)">
  </div>

  <!-- query-result -->
  <div id="query-result-panel" class="query-result-panel">
    <div id="tab-wrapper" class="tab-wrapper"></div>
  </div>
  <script src='js/main.js' type='module'></script>

</body>

<script>
  function openInfoPanel() {
    document.getElementById("info-panel").style.display = "block";
  }

  function closeInfoPanel() {
    document.getElementById("info-panel").style.display = "none";
  }

  // clear color of all nodes and links
  function clearNodeLinkColor() {
    var nodes = document.getElementsByTagName("circle");
    var links = document.getElementsByTagName("line");
    for (let i = 0; i < nodes.length; i++) {
      var node = nodes[i];
      originalColor = node.getAttribute("original-fill");
      node.setAttribute("fill", originalColor);
    }
    for (let i = 0; i < links.length; i++) {
      var link = links[i];
      link.setAttribute("stroke", "#999");
    }
  }

  // set color to red for nodes and links in `ids`
  function setNodeLinkColor(nodeIds, linkIds) {
    var nodes = document.getElementsByTagName("circle");
    var links = document.getElementsByTagName("line");
    nodeIds.forEach((id) => {
      var node = nodes[id];
      node.setAttribute("fill", "red");
    });
    linkIds.forEach((id) => {
      var link = links[id];
      link.setAttribute("stroke", "red");
    });
  }

  function input_nl_query(e) {
    // when `enter` clicked
    if (e.keyCode !== 13) return;

    let query_str = document.getElementById("input-query").value;

    let formData = new FormData();
    formData.append("query_str", query_str);
    console.log(query_str);

    // get resp from backend
    const req = new XMLHttpRequest();
    req.open("POST", "http://127.0.0.1:5000/nl_query", true);
    req.send(formData);

    req.onreadystatechange = function() {
      if (!(req.readyState === 4 && req.status === 200)) return;
      const json = req.responseText;

      const resp = JsonStrToMap(json);
      const query_results = resp.get("query_results");

      // delete former results
      removeFormerRes();

      // delete former highlight
      clearNodeLinkColor();

      var i = 1;
      query_results.forEach((result) => {
        console.log(result);
        query_str = result["query_str"];
        addATab(query_str, i);
        const nodes = result["query_records"]["nodes"];
        const links = result["query_records"]["links"];
        i++;
      });
      const nodes = query_results[0]["query_records"]["nodes"];
      const links = query_results[0]["query_records"]["links"];
      setNodeLinkColor(nodes, links);
    };
  }

  function addATab(txt, index, nodes, links) {
    var tabs = document.getElementById("tab-wrapper");
    var tabId = index;

    var input = document.createElement("input");
    input.type = "radio";
    input.name = "tab-radio";
    input.id = "tab-radio-" + tabId;
    input.setAttribute("class", "tab-radio");

    var label = document.createElement("label");
    label.setAttribute("for", "tab-radio-" + tabId);
    label.setAttribute("class", "tab-handler tab-handler-" + tabId);
    label.innerHTML = "" + tabId;

    var div = document.createElement("div");
    div.setAttribute("class", "tab-content tab-content-" + tabId);
    div.innerHTML = txt;

    tabs.appendChild(input);
    tabs.appendChild(label);
    tabs.appendChild(div);
  }

  function removeFormerRes() {
    var e = document.getElementById("tab-wrapper");
    var child = e.lastElementChild;
    while (child) {
      e.removeChild(child);
      child = e.lastElementChild;
    }
  }

  function ObjToMap(obj) {
    const map = new Map();
    for (let key in obj) {
      map.set(key, obj[key]);
    }
    return map;
  }

  function JsonStrToMap(str) {
    return ObjToMap(JSON.parse(str));
  }

  function p(a) {
    console.log(a);
  }
</script>

</html>